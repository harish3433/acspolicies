apiVersion: batch/v1
kind: Job
metadata:
  name: acs-policy-sync
  annotations:
    argocd.argoproj.io/hook: PostSync
spec:
  template:
    spec:
      containers:
      - name: policy-sync
        image: registry.access.redhat.com/ubi8/ubi-minimal:latest
        env:
        - name: ACS_TOKEN
          valueFrom:
            secretKeyRef:
              name: acs-token
              key: token
        - name: ACS_CENTRAL_URL
          value: "https://central-rhacs-operator.apps.prince-cluster.ocp02.demo"
        volumeMounts:
        - name: policies
          mountPath: /policies
        command: ["/bin/bash"]
        args:
        - -c
        - |
          microdnf install -y curl jq
          echo "Syncing policies to ACS Central..."
          
          if ! curl -k -s "$ACS_CENTRAL_URL/v1/ping" | grep -q "ok"; then
            echo "Cannot connect to ACS Central"
            exit 1
          fi
          
          for policy_file in /policies/*.yml; do
            if [[ -f "$policy_file" ]]; then
              echo "Processing $policy_file"
              policy_json=$(grep -A 1000 'policy.json:' "$policy_file" | sed '1d' | sed 's/^    //')
              
              if [[ -n "$policy_json" ]]; then
                echo "Creating/updating policy in ACS..."
                response=$(curl -k -s -X POST \
                  -H "Authorization: Bearer $ACS_TOKEN" \
                  -H "Content-Type: application/json" \
                  -d "$policy_json" \
                  "$ACS_CENTRAL_URL/v1/policies")
                
                if echo "$response" | grep -q "already exists"; then
                  policy_id=$(echo "$policy_json" | jq -r '.id')
                  echo "Policy exists, updating..."
                  response=$(curl -k -s -X PUT \
                    -H "Authorization: Bearer $ACS_TOKEN" \
                    -H "Content-Type: application/json" \
                    -d "$policy_json" \
                    "$ACS_CENTRAL_URL/v1/policies/$policy_id")
                fi
                
                echo "ACS Response: $response"
              fi
            fi
          done
          
          echo "Policy sync completed successfully"
      volumes:
      - name: policies
        configMap:
          name: acs-policies
      restartPolicy: OnFailure
