apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/hook: PostSync
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"batch/v1","kind":"Job","metadata":{"annotations":{"argocd.argoproj.io/hook":"PostSync"},"finalizers":["argocd.argoproj.io/hook-finalizer"],"labels":{"app.kubernetes.io/instance":"acs-policies"},"name":"acs-policy-sync","namespace":"stackrox"},"spec":{"template":{"spec":{"containers":[{"args":["-c","cd /runner\nansible-playbook acs-policy-sync.yml -e \"acs_token=$ACS_TOKEN\" -e \"acs_central_url=$ACS_CENTRAL_URL\"\n"],"command":["/bin/sh"],"env":[{"name":"ACS_TOKEN","valueFrom":{"secretKeyRef":{"key":"token","name":"acs-token"}}},{"name":"ACS_CENTRAL_URL","value":"https://central-stackrox.apps.cluster.local"}],"image":"quay.io/ansible/ansible-runner:latest","name":"policy-sync","volumeMounts":[{"mountPath":"/policies","name":"policies"},{"mountPath":"/runner","name":"playbook"}]}],"restartPolicy":"OnFailure","volumes":[{"configMap":{"name":"acs-policies-dev-6t9d7d2cm4"},"name":"policies"},{"configMap":{"name":"ansible-playbook"},"name":"playbook"}]}}}}
  creationTimestamp: "2025-10-04T19:14:47Z"
  deletionGracePeriodSeconds: 0
  deletionTimestamp: "2025-10-04T19:19:10Z"
  generation: 2
  labels:
    app.kubernetes.io/instance: acs-policies
  name: acs-policy-sync
  finalizers:
  namespace: stackrox
  resourceVersion: "113876077"
  uid: 4f9c071d-2428-477a-b24b-17118da77fbb
spec:
  backoffLimit: 6
  completionMode: NonIndexed
  completions: 1
  manualSelector: false
  parallelism: 1
  podReplacementPolicy: TerminatingOrFailed
  selector:
    matchLabels:
      batch.kubernetes.io/controller-uid: 4f9c071d-2428-477a-b24b-17118da77fbb
  suspend: false
  template:
    metadata:
      creationTimestamp: null
      labels:
        batch.kubernetes.io/controller-uid: 4f9c071d-2428-477a-b24b-17118da77fbb
        batch.kubernetes.io/job-name: acs-policy-sync
        controller-uid: 4f9c071d-2428-477a-b24b-17118da77fbb
        job-name: acs-policy-sync
    spec:
      containers:
      - args:
        - -c
        - |
          cd /runner
          ansible-playbook acs-policy-sync.yml -e "acs_token=$ACS_TOKEN" -e "acs_central_url=$ACS_CENTRAL_URL"
        command:
        - /bin/sh
        env:
        - name: ACS_TOKEN
          valueFrom:
            secretKeyRef:
              key: token
              name: acs-token
        - name: ACS_CENTRAL_URL
          value: https://central-stackrox.apps.cluster.local
        image: quay.io/ansible/ansible-runner:latest
        imagePullPolicy: Always
        name: policy-sync
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /policies
          name: policies
        - mountPath: /runner
          name: playbook
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: acs-policies-dev-6t9d7d2cm4
        name: policies
      - configMap:
          defaultMode: 420
          name: ansible-playbook
        name: playbook
status:
  active: 1
  ready: 0
  startTime: "2025-10-04T19:14:47Z"
  terminating: 0
  uncountedTerminatedPods: {}
