---
- name: Complete ACS Policy GitOps Setup
  hosts: localhost
  gather_facts: false
  vars:
    acs_token: "{{ lookup('env', 'ACS_TOKEN') }}"
    github_repo: "https://github.com/harish3433/acspolicies.git"
    acs_central_url: "https://central-rhacs-operator.apps.prince-cluster.ocp02.demo"
    
  tasks:
    - name: Verify ACS token is provided
      fail:
        msg: "Please set ACS_TOKEN environment variable"
      when: acs_token == ""

    - name: Create namespaces
      kubernetes.core.k8s:
        name: "{{ item }}"
        api_version: v1
        kind: Namespace
        state: present
      loop:
        - stackrox
        - argocd

    - name: Check if ArgoCD exists
      kubernetes.core.k8s_info:
        api_version: argoproj.io/v1alpha1
        kind: ArgoCD
        name: argocd
        namespace: argocd
      register: argocd_check

    - name: Install ArgoCD operator (if not exists)
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: operators.coreos.com/v1alpha1
          kind: Subscription
          metadata:
            name: argocd-operator
            namespace: argocd
          spec:
            channel: stable
            name: argocd-operator
            source: operatorhub
            sourceNamespace: openshift-marketplace
      when: argocd_check.resources | length == 0

    - name: Wait for operator
      pause:
        seconds: 30
      when: argocd_check.resources | length == 0

    - name: Install ArgoCD instance (if not exists)
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: ArgoCD
          metadata:
            name: argocd
            namespace: argocd
          spec:
            server:
              route:
                enabled: true
      when: argocd_check.resources | length == 0

    - name: Wait for ArgoCD
      pause:
        seconds: 60
      when: argocd_check.resources | length == 0

    - name: Create ACS token secret
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: acs-token
            namespace: stackrox
          type: Opaque
          data:
            token: "{{ acs_token | b64encode }}"

    - name: Configure ArgoCD for faster sync
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: argocd-cmd-params-cm
            namespace: argocd
          data:
            repo.server.timeout.seconds: "60"

    - name: Create ArgoCD application for policies
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: acs-policies
            namespace: argocd
            annotations:
              argocd.argoproj.io/refresh: normal
          spec:
            project: default
            source:
              repoURL: "{{ github_repo }}"
              targetRevision: master
              path: policies
            destination:
              server: https://kubernetes.default.svc
              namespace: stackrox
            syncPolicy:
              automated:
                prune: true
                selfHeal: true
              retry:
                limit: 5
                backoff:
                  duration: 5s
                  factor: 2
                  maxDuration: 3m
              syncOptions:
              - CreateNamespace=true

    - name: Get ArgoCD route
      kubernetes.core.k8s_info:
        api_version: route.openshift.io/v1
        kind: Route
        name: argocd-server
        namespace: argocd
      register: argocd_route

    - name: Get ArgoCD admin password
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        name: argocd-cluster
        namespace: argocd
      register: argocd_secret

    - name: Display setup completion
      debug:
        msg: |
          ‚úÖ Complete ACS Policy GitOps Setup Finished!
          
          üåê ArgoCD UI:
          URL: https://{{ argocd_route.resources[0].spec.host | default('Check: oc get route argocd-server -n argocd') }}
          Username: admin
          Password: {{ argocd_secret.resources[0].data['admin.password'] | b64decode | default('Check: oc get secret argocd-cluster -n argocd -o jsonpath="{.data.admin\.password}" | base64 -d') }}
          
          üéØ ACS Central: {{ acs_central_url }}
          
          üìÅ Policies Location: GitHub repo /policies folder
          
          üöÄ GitOps Flow:
          1. Edit policies in GitHub /policies folder
          2. Push to master branch
          3. ArgoCD auto-syncs within 3 minutes
          4. Policies appear in ACS Central
          
          ‚ú® Your pipeline is ready!
